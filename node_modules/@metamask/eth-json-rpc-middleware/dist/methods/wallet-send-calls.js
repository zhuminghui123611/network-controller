"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.walletSendCalls = void 0;
const rpc_errors_1 = require("@metamask/rpc-errors");
const superstruct_1 = require("@metamask/superstruct");
const utils_1 = require("@metamask/utils");
const validation_1 = require("../utils/validation");
const CapabilitiesStruct = (0, superstruct_1.record)((0, superstruct_1.string)(), (0, superstruct_1.type)({
    optional: (0, superstruct_1.optional)((0, superstruct_1.boolean)()),
}));
const SendCallsStruct = (0, superstruct_1.tuple)([
    (0, superstruct_1.object)({
        version: (0, superstruct_1.nonempty)((0, superstruct_1.string)()),
        id: (0, superstruct_1.optional)(utils_1.StrictHexStruct),
        from: (0, superstruct_1.optional)(utils_1.HexChecksumAddressStruct),
        chainId: utils_1.StrictHexStruct,
        atomicRequired: (0, superstruct_1.boolean)(),
        calls: (0, superstruct_1.array)((0, superstruct_1.object)({
            to: (0, superstruct_1.optional)(utils_1.HexChecksumAddressStruct),
            data: (0, superstruct_1.optional)(utils_1.StrictHexStruct),
            value: (0, superstruct_1.optional)(utils_1.StrictHexStruct),
            capabilities: (0, superstruct_1.optional)(CapabilitiesStruct),
        })),
        capabilities: (0, superstruct_1.optional)(CapabilitiesStruct),
    }),
]);
async function walletSendCalls(req, res, { getAccounts, processSendCalls, }) {
    if (!processSendCalls) {
        throw rpc_errors_1.rpcErrors.methodNotSupported();
    }
    (0, validation_1.validateParams)(req.params, SendCallsStruct);
    const params = req.params[0];
    const from = params.from
        ? await (0, validation_1.validateAndNormalizeKeyholder)(params.from, req, {
            getAccounts,
        })
        : undefined;
    const sendCalls = Object.assign(Object.assign({}, params), { from });
    res.result = await processSendCalls(sendCalls, req);
}
exports.walletSendCalls = walletSendCalls;
//# sourceMappingURL=wallet-send-calls.js.map