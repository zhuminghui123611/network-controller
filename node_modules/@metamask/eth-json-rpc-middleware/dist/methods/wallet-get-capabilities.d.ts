import type { Infer } from '@metamask/superstruct';
import type { Hex, Json, JsonRpcRequest, PendingJsonRpcResponse } from '@metamask/utils';
declare const GetCapabilitiesStruct: import("@metamask/superstruct").Struct<[`0x${string}`, `0x${string}`[] | undefined], null>;
export declare type GetCapabilitiesParams = Infer<typeof GetCapabilitiesStruct>;
export declare type GetCapabilitiesResult = Record<Hex, Record<string, Json>>;
export declare type GetCapabilitiesHook = (address: GetCapabilitiesParams[0], chainIds: GetCapabilitiesParams[1], req: JsonRpcRequest) => Promise<GetCapabilitiesResult>;
export declare function walletGetCapabilities(req: JsonRpcRequest, res: PendingJsonRpcResponse<Json>, { getAccounts, getCapabilities, }: {
    getAccounts: (req: JsonRpcRequest) => Promise<string[]>;
    getCapabilities?: GetCapabilitiesHook;
}): Promise<void>;
export {};
