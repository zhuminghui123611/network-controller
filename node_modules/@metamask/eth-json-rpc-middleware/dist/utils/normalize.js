"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.parseTypedMessage = exports.normalizeTypedMessage = void 0;
/**
 * Normalizes the messageData for the eth_signTypedData
 *
 * @param messageData - The messageData to normalize.
 * @returns The normalized messageData.
 */
function normalizeTypedMessage(messageData) {
    var _a;
    let data;
    try {
        data = parseTypedMessage(messageData);
    }
    catch (e) {
        // Ignore normalization errors and pass the message as is
        return messageData;
    }
    const { verifyingContract } = (_a = data.domain) !== null && _a !== void 0 ? _a : {};
    if (!verifyingContract) {
        return messageData;
    }
    data.domain.verifyingContract = normalizeContractAddress(verifyingContract);
    return JSON.stringify(data);
}
exports.normalizeTypedMessage = normalizeTypedMessage;
/**
 * Parses the messageData to obtain the data object for EIP712 normalization
 *
 * @param data - The messageData to parse.
 * @returns The data object for EIP712 normalization.
 */
function parseTypedMessage(data) {
    if (typeof data !== 'string') {
        return data;
    }
    return JSON.parse(data);
}
exports.parseTypedMessage = parseTypedMessage;
/**
 * Normalizes the address to standard hexadecimal format
 *
 * @param address - The address to normalize.
 * @returns The normalized address.
 */
function normalizeContractAddress(address) {
    if (address.startsWith('0X')) {
        return `0x${address.slice(2)}`;
    }
    return address;
}
//# sourceMappingURL=normalize.js.map